pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps{
                sh  "checkout branch begins......."
            
                // script {
                //     git branch: 'jenkins',
                //         credentialsId: 'online_learning_platform_jenkins_access_token',
                //         url: 'https://github.com/nafizpervez/Online_Learning_Platform_BE_docker_python.git'
                //         sh "ls -lat"

                sh  "checkout branch Ends."
                }
            }
        }
        stage('Setup_Python3') {
            steps {
                sh  "Installing python3....."
                sh  'apt-get install python3'
                sh  "Python3 installation Ends."
                
            }
        }
        stage('virtual_Env') {
            steps {
                sh "Creating Virtual Environment"
                sh 'python3 -m venv ./venv'

                sh "Virtual Environment Starts....."
                sh '. ./venv/bin/activate'
                sh 'python3 -m install -r usr/code/requirements.txt'
                
            }
        }
        stage('Unit_test') {
            steps {
                script {
                    sh "echo unit test started"
                    // sh "pytest test/test_main.py"
                    sh "echo unit test ended"
                    // sh "docker compose up --build backend || true"
                    // sh "docker compose up || true"
                    // sh "docker rm container || true"
                    // def dockerImage = 'localhost:5000/my-image'
                    // docker.image(dockerImage).pull()
                    // def containerId = docker.image(dockerImage).run("--user root --rm -it -v ${pwd()}:/mnt --name container")
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    sh "echo build started"
                    // sh "echo building backend"
                    // sh "docker compose up"
                    sh "echo build ended"
                    // sh "docker compose up --build backend || true"
                    // sh "docker compose up || true"
                    // sh "docker rm container || true"
                    // def dockerImage = 'localhost:5000/my-image'
                    // docker.image(dockerImage).pull()
                    // def containerId = docker.image(dockerImage).run("--user root --rm -it -v ${pwd()}:/mnt --name container")
                }
            }
        }
        
        stage('Run') {
            steps {
                script {
                    // sh "echo unit test started"
                    // // sh "pytest test/test_main.py"
                    // sh "echo unit test ended"
                    // sh "docker compose up --build backend || true"
                    // sh "docker compose up || true"
                    // sh "docker rm container || true"
                    // def dockerImage = 'localhost:5000/my-image'
                    // docker.image(dockerImage).pull()
                    // def containerId = docker.image(dockerImage).run("--user root --rm -it -v ${pwd()}:/mnt --name container")
                }
            }
        }
        
        // stage('Deploy') {
        //     steps {
        //         script {
        //             sh "echo deploy"
        //             // sh "docker compose up --build backend || true"
        //             // sh "docker compose up || true"
        //             // sh "docker rm container || true"
        //             // def dockerImage = 'localhost:5000/my-image'
        //             // docker.image(dockerImage).pull()
        //             // def containerId = docker.image(dockerImage).run("--user root --rm -it -v ${pwd()}:/mnt --name container")
        //         }
        //     }
        // }
        // stage('Completion') {
        //     steps {
        //         script {
        //             sh "echo completion"
        //             // sh "docker compose up --build backend || true"
        //             // sh "docker compose up || true"
        //             // sh "docker rm container || true"
        //             // def dockerImage = 'localhost:5000/my-image'
        //             // docker.image(dockerImage).pull()
        //             // def containerId = docker.image(dockerImage).run("--user root --rm -it -v ${pwd()}:/mnt --name container")
        //         }
        //     }
        // }
    }
}