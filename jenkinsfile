pipeline {
    agent any
    stages{
        stage('Git Checkout') {
                steps {
                    script {
                            sh "echo checkout begins......."

                            sh "apt-get install -y git"

                            git credentialsId: 'GIT_AUTH_TOKEN', url: 'https://github.com/nafizpervez/Online_Learning_Platform_BE_docker_python.git'
                            sh "ls -lart ./*" 
                            sh "git branch -a"
                            sh "git checkout master"

                            sh "echo checkout SUCCESSFUL"
                            }
                }
        }
        stage('Installing Dependencies') {
                steps {
                    script {
                        sh "echo Python3 install started..."
                        sh '''
                            #!/bin/bash
                            umask 022
                            apt-get update
                            apt-get install -y python3
                        '''
                        sh "echo Python3 install ended"
                    }
                }
        }
        stage('Initiating Virtual Enronment') {
                steps {
                        sh "echo venv installing..."
                        sh '''
                            apt-get install -y python3-venv
                            python3 -m venv jenkins_venv
                            . ./jenkins_venv/bin/activate
                            '''
                        sh "echo venv ACTIVATED..."
                        }
        }





        stage ('Tools Installation'){
                steps {
                        sh "echo venv installing..."
                        sh '''
                            pip install docker
                            pip install wheel
                            echo "Cython<3" > cython_constraint.txt
                            PIP_CONSTRAINT=cython_constraint.txt pip install "ai-core-sdk[aicore-content]"
                            pip install docker-compose
                            apt-get install -y libpq-dev
                            pip install -U psycopg2
                            pip install -U sqlalchemy
                            pip install -U httpx 
                            pip install -U fastapi
                        '''
                        sh "echo installation Complete"
                }
        }





        stage ('Unit Testing'){
                steps{
                        sh "echo unit testing..."
                        sh '''
                            pytest /usr/code/test/test_main.py
                            pyenv virtualenv-delete jenkins_venv
                        '''
                        sh "echo unit test SUCCESS"
                }
        }











        stage('Database') {
                steps {
                    script {
                        sh "echo database initiating..."
                        sh '''
                            docker-compose build postgres
                            docker-compose build pgadmin
                        '''
                        sh "echo datavase SUCCESSFULLY created"
                    }
                }
        }













        stage('Build') {
                steps {
                    script {
                        sh "echo building back-end..."
                        sh '''
                            docker-compose build backend
                            docker-compose build jenkins
                        '''
                        sh "echo building SUCCESSFULLY done"
                    }
                }
        }
        
    }
}