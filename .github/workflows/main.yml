#Github Action

name: Build, Push Docker Image to Docker Hub and deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v3

      - name: Build Docker Compose Image
        run: |
          docker-compose build --no-cache --force-rm
          docker-compose up -d

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - run: pip install fastapi httpx pytest sqlalchemy pydantic psycopg2 uvicorn

      - name: Unit Testing
        run: pytest test/test_main.py

  push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: push backend into docker hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: nafizpervez/online_learning_platform:backend

      - name: push frontend into docker hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: nafizpervez/online_learning_platform:frontend

      - name: push postgres into docker hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: nafizpervez/online_learning_platform:postgres

      - name: push pgadmin into docker hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: nafizpervez/online_learning_platform:pgadmin

  pull_deploy:
    needs: [push, build]
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: login into docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: set permission for aws private key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
      - name: pull docker composer images from docker hub
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@13.126.198.61 'sudo docker pull nafizpervez/online_learning_platform:backend'
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@13.126.198.61 'sudo docker pull nafizpervez/online_learning_platform:frontend'
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@13.126.198.61 'sudo docker pull nafizpervez/online_learning_platform:postgres'
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@13.126.198.61 'sudo docker pull nafizpervez/online_learning_platform:pgadmin'

      - name: stop running compose containers
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@13.126.198.61 'sudo docker-compose stop'
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@13.126.198.61 'sudo docker-compose down'

      - name: deploy to ec2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: |
            docker-compose up -d --build backend
            docker-compose up -d --build postgres
            docker-compose up -d --build pgadmin
            docker run -d --name frontend -p 88:3000 ${{ secrets.DOCKER_USERNAME }}/online_learning_platform:frontend
